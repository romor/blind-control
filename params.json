{"name":"blind-control","tagline":"Automatically control sun blinds depending on sun radiation and temperature using a Somfy RTS remote control and a Raspberry Pi.","body":"# Project Target\r\nThis project is about electrically controlled shutters and roller blinds. These are controlled with the Somfy RTS RF remote control system. In summer time, I like to automatically control the blinds such that they close if significant sun light would come insight and open again if direct sun light is over again.\r\nSince the blinds are located at different angles on different sides of the house I need individual control of the blinds, depending on their position.\r\nAlso I want to maximize the opening time to have it as bright as possible insight. However, if the sun shines directly into a window the blind must be down to avoid overheating of the house.\r\nAs a result, each blind shall only close if the sun has an angle for direct radiation. If possible the blind should also not close if the sky is cloudy and no direct sun light prevails.\r\n\r\n\r\n# Possible solutions\r\nHow to control the blinds\r\nThe following alternatives were considered by myself:\r\n1. Somfy Timer xxx\r\nSomfy offers a timer control for their systems such as xxx.\r\nTODO: add pict\r\n\r\n**Advantages**\r\n - easy to implement: just by the unit and program it\r\n\r\n**Disadvantages**\r\n - only 1 channel per timer which means that I need several units for individual control of the blinds\r\n - not possible to automatically change control based on cloudy wheather condition or temperatures\r\n - not possible to automatically adapt it to changing sun position\r\n\r\n2. Somfy PC Interface xxx\r\nSomfy offers a PC interface xxx which provides a serial interface. It is able to serve multiple channels so each blind could be controlled individually.\r\nTODO: add pict\r\n\r\n**Advantages**\r\n - available HW unit, only need for software development\r\n - full flexibility with regard to switching control present\r\n\r\n**Disadvantages**\r\n - the price of the interface is way to expensive and not feasible at all. It seems that Somfy wants to inhibit such applications. Also on the product description Somfy mentions that there is no support for this interface product at all.\r\n - the serial interface seems outdated to me. I prefer an ethernet connection such that I do not need a computer locally attached and running 24 hours per day.\r\n\r\n3. Build own Interface\r\nThe Somfy Teles 5 RTS is available for reasonable budget and offers 5 channels. If the button contact can be closed by some software controlled unit with ethernet interface I have all I need. This can easily be done using a Raspberry Pi.\r\nTODO: add pict\r\n\r\n**Advantages**\r\n - full flexibility\r\n - low price\r\n\r\n**Disadvantages**\r\n - some more development effort needed, including hardware adaptations\r\n\r\nI chose to go for solution 3 which I will outline in more detail below.\r\n\r\n\r\n# Hardware Setup\r\n\r\nThe Somfy Telis 5 RTS provides the interface to the radio signal. I use this unit as it is and just solder wires to the button lines to control them automatically. The buttons seem to be connected to pull up resistors and close contact to ground if pressed. Therefore, I soldered wires to each button and the GND connection:\r\nTODO: add pict\r\n\r\nThese wires are connected to the GPIO interface of a Raspberry Pi. So the wirering is like this:\r\n - Telis GND <-> RPi GND (Pin xxx)\r\n - Telis Button Up <-> RPi GPIO xx (Pin xxx)\r\n...\r\n\r\nTODO: add pict\r\n\r\n\r\n# Software\r\n\r\nWe have various software components involved:\r\n\r\n## Weather Data Retrieval\r\n\r\nThis component determines the outside temperature and the probability of sun shine in near future. You need some weather service to provide this data. Usually you find something to access for current temperature and sun minutes per hour at your location. I was lucky and my local meterological institute offered me also forecast data which I receive regulary in CSV format per email.\r\n\r\nThus I developed a Python script that retrieves the email from my personal email account and parses the weather data. The extracted sun shine probability and the outside temperature is then stored to an OPC server.\r\nThis storage to an OPC XML-DA server has mainly historical reason because I have such system available (Loytec LINX 120). Otherwise it could e.g. just be stored to a file.\r\nLook at the zamg component xxx in the git repository for this functionality.\r\n\r\n## Sun Power Calculation\r\n\r\nThis component derives the power of the sun as perceived for each individual window. It derives the current position of the sun on horizon (azimuth, altitude) and the angle of the sun light to each window. Based on this angle and the sun power from the weather retrieval component it derives the sun power for each window. Again, this is stored using an OPC datapoint.\r\nLook at the sunpower component xxx in the git repository for this functionality.\r\n\r\n## Command Control\r\n\r\nThis component derives the up and down commands for the blinds. It compares the power from the sun power calculation component with a threshold parameter. If the power is above the threshold a close command to the blind is issued.\r\n\r\n## Remote Control Driver\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}